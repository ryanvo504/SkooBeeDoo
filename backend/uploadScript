import admin from 'firebase-admin';
import { readFileSync } from 'fs';
import { dirname, join } from 'path';
import { fileURLToPath } from 'url';

const __dirname = dirname(fileURLToPath(import.meta.url));

try {
    // Read service account file
    const serviceAccountPath = join(__dirname, './config/serviceAccountKey.json');
    const serviceAccount = JSON.parse(readFileSync(serviceAccountPath, 'utf8'));
    
    console.log('Initializing Firebase with project:', serviceAccount.project_id);
    
    // Initialize with explicit configuration
    admin.initializeApp({
        credential: admin.credential.cert({
            projectId: "skoobeedoo-45a94",
            clientEmail: "firebase-adminsdk-fbsvc@skoobeedoo-45a94.iam.gserviceaccount.com",
            privateKey: serviceAccount.private_key
        }),
        databaseURL: "https://skoobeedoo-45a94.firebaseio.com"
    });

    const db = admin.firestore();

    // Read the data file
    const dataPath = join(__dirname, 'dbData.json');
    const rawData = readFileSync(dataPath, 'utf8');
    const cityData = JSON.parse(rawData);

    const uploadData = async () => {
        try {
            // First test the connection
            await db.collection('test').doc('connection-test').set({
                timestamp: admin.firestore.FieldValue.serverTimestamp()
            });
            console.log('Connection test successful');

            // Then upload the actual data
            const batch = db.batch();
            let count = 0;

            for (const city of cityData) {
                const docRef = db.collection('cities').doc();
                batch.set(docRef, city);
                count++;
                
                if (count % 100 === 0) {
                    console.log(`Processed ${count} documents...`);
                }
            }

            await batch.commit();
            console.log(`Successfully uploaded ${count} documents`);
        } catch (error) {
            console.error('Error details:', {
                code: error.code,
                message: error.message,
                details: error.details
            });
            
            // Check common issues
            if (error.code === 'permission-denied') {
                console.error('Please check your Firestore rules');
            }
            if (error.code === 'unauthenticated') {
                console.error('Authentication failed. Please check your service account credentials');
            }
        }
    };

    uploadData();

} catch (error) {
    console.error('Script initialization error:', error);
}